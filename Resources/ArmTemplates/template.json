{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environment": {
            "type": "string"
        },
        "projectPrefix": {
            "type": "string",
            "metadata": {
                "description": "Prefix for all resources created for the project (except storage account, see below). Should be in the format dfc-env-proj"
            }
        },
        "storageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name of the project storage account (as it follows a different naming convention)"
            }
        },
        "apimInternalProductName": {
            "type": "string"
        },
        "apimExternalProductName": {
            "type": "string"
        },
        "apimFindAnApprenticeshipProductName": {
            "type": "string"
        },
        "apimServiceName": {
            "type": "string",
            "metadata": {
                "description": "APIM name"
            }
        },
        "appServicePlanSize": {
            "type": "string",
            "defaultValue": "1",
            "metadata": {
                "description": "Size of the instances in the app service plan"
            },
            "allowedValues": [
                "1",
                "2",
                "3"
            ]
        },
        "appServicePlanInstances": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Number of instances in the app service plan"
            }
        },
        "aseHostingEnvironmentName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional App Service Environment for the app service to exist within. If not supplied creates a stand alone app service plan."
            }
        },
        "aseResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource group the App Service Environment belongs to - only required if aseHostingEnvironmentName specified"
            }
        },
        "dfcSharedResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The Resource Group that contains shared DFC resource, eg APIM, ASE, etc"
            }
        },
        "searchReplicaCount": {
            "type": "int",
            "metadata": {
                "description": "the number of search replicas to create"
            }
        },
        "searchPartitionCount": {
            "type": "int",
            "metadata": {
                "description": "the number of search partitions to create"
            }
        },
        "redisSkuName": {
            "type": "string",
            "metadata": {
                "description": "The name of the tier for redis cache."
            }
        },
        "redisCapacity": {
            "type": "int",
            "metadata": {
                "description": "The size of the redis cache instance"
            }
        }
    },
    "variables": {
        "productionEnvironment": "[contains(createArray('OAT', 'PP', 'PRD'), parameters('Environment'))]",
        "deploymentUrlBase": "https://raw.githubusercontent.com/SkillsFundingAgency/dfc-devops/master/ArmTemplates/",
        "appServiceName": "[concat(parameters('projectPrefix'),'-as')]",
        "appServicePlanName": "[concat(parameters('projectPrefix'),'-shared-asp')]",
        "cosmosDbSQLName": "[concat(parameters('projectPrefix'),'-cdb')]",
        "azureSearchName": "[concat(parameters('projectPrefix'),'-sch')]",
        "redisCacheName": "[concat(parameters('projectPrefix'), '-redis')]",
        "azureServiceBusNamespace": "[concat(parameters('projectPrefix'),'-ns')]",
        "azureServicebusSku": "[if(variables('productionEnvironment'), 'Premium', 'Standard')]",
        "fatProcessorQueueName": "fat-processor",
        "storageContainers": [
            "provider-files",
            "data-protection-keys",
            "faoc-files"
        ]
    },
    "resources": [
        {
            "apiVersion": "2017-05-10",
            "name": "courseDirectoryStorage",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'storage-account.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "[concat('storageContainer-', variables('storageContainers')[copyIndex()])]",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "courseDirectoryStorage"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'Storage/storage-account-arm-container.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[parameters('storageAccountName')]"
                    },
                    "storageContainerName": {
                        "value": "[variables('storageContainers')[copyIndex()]]"
                    }
                }
            },
            "copy": {
                "name": "containerCopy",
                "count": "[length(variables('storageContainers'))]"
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "courseDirectoryAppServicePlan",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'app-service-plan.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServicePlanName": {
                        "value": "[variables('appServicePlanName')]"
                    },
                    "aspSize": {
                        "value": "[parameters('appServicePlanSize')]"
                    },
                    "aspInstances": {
                        "value": "[parameters('appServicePlanInstances')]"
                    },
                    "aseHostingEnvironmentName": {
                        "value": "[parameters('aseHostingEnvironmentName')]"
                    },
                    "aseResourceGroup": {
                        "value": "[parameters('aseResourceGroup')]"
                    }
                }
            }
        },
        {
            "name": "publishToCourseDirectoryApimLogger",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('dfcSharedResourceGroupName')]",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'APIM/apim-logger.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apimServiceName": {
                        "value": "[parameters('apimServiceName')]"
                    },
                    "productDisplayName": {
                        "value": "[parameters('apimInternalProductName')]"
                    }
                }
            }
        },  
        {
            "name": "publishToCourseDirectoryApimProduct",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[parameters('dfcSharedResourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'APIM/apim-product.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "allowAnonymousAccess": {
                        "value": false
                    },
                    "apimServiceName": {
                        "value": "[parameters('apimServiceName')]"
                    },
                    "productDisplayName": {
                        "value": "[parameters('apimInternalProductName')]"
                    }
                }
            }
        },
        {
            "name": "findACourseApimLogger",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('dfcSharedResourceGroupName')]",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'APIM/apim-logger.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apimServiceName": {
                        "value": "[parameters('apimServiceName')]"
                    },
                    "productDisplayName": {
                        "value": "[parameters('apimExternalProductName')]"
                    }
                }
            }
        },
        {
            "name": "findACourseApimProduct",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[parameters('dfcSharedResourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'APIM/apim-product.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "allowAnonymousAccess": {
                        "value": false
                    },
                    "apimServiceName": {
                        "value": "[parameters('apimServiceName')]"
                    },
                    "productDisplayName": {
                        "value": "[parameters('apimExternalProductName')]"
                    }
                }
            }
        },
        {
            "name": "findAnApprenticeshipApimLogger",
            "type": "Microsoft.Resources/deployments",
            "resourceGroup": "[parameters('dfcSharedResourceGroupName')]",
            "apiVersion": "2017-05-10",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'APIM/apim-logger.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "apimServiceName": {
                        "value": "[parameters('apimServiceName')]"
                    },
                    "productDisplayName": {
                        "value": "[parameters('apimFindAnApprenticeshipProductName')]"
                    }
                }
            }
        },
        {
            "name": "findAnApprenticeshipApimProduct",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2017-05-10",
            "resourceGroup": "[parameters('dfcSharedResourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'), 'APIM/apim-product.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "allowAnonymousAccess": {
                        "value": true
                    },
                    "apimServiceName": {
                        "value": "[parameters('apimServiceName')]"
                    },
                    "productDisplayName": {
                        "value": "[parameters('apimFindAnApprenticeshipProductName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "providerPortalCosmosSQL",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'cosmos-db.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "cosmosDbName": {
                        "value": "[variables('cosmosDbSQLName')]"
                    },
                    "cosmosApiType": {
                        "value": "SQL"
                    },
                    "defaultConsistencyLevel": {
                        "value": "Eventual"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "providerPortalCosmosSQLdatabase",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "providerPortalCosmosSQL"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'CosmosDb/cosmos-database.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "accountName": {
                        "value": "[variables('cosmosDbSQLName')]"
                    },
                    "databaseName": {
                        "value": "providerportal"
                    },
                    "databaseNeedsCreation": {
                        "value": false
                    },
                    "useSharedRequestUnits": {
                        "value": false
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "providerPortalSearch",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'azure-search.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "azureSearchName": {
                        "value": "[variables('azureSearchName')]"
                    },
                    "azureSearchSku": {
                        "value": "standard"
                    },
                    "azureSearchReplicaCount": {
                        "value": "[parameters('searchReplicaCount')]"
                    },
                    "azureSearchPartitionCount": {
                        "value": "[parameters('searchPartitionCount')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "providerPortalServiceBusNamespace",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'servicebus-namespace.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "serviceBusNamespaceName": {
                        "value": "[variables('azureServiceBusNamespace')]"
                    },
                    "serviceBusSku": {
                        "value": "[variables('azureServicebusSku')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "providerPortalServiceBusFatProcessorQueue",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "providerPortalServiceBusNamespace"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'ServiceBus/servicebus-queue.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "serviceBusNamespaceName": {
                        "value": "[variables('azureServiceBusNamespace')]"
                    },
                    "queueName": {
                        "value": "[variables('fatProcessorQueueName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "providerPortalServiceBusFatProcessorQueueAuth",
            "type": "Microsoft.Resources/deployments",
            "dependsOn": [
                "providerPortalServiceBusFatProcessorQueue"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'ServiceBus/servicebus-queue-authrule.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "authorizationRuleName": {
                        "value": "[concat('monitor-', variables('fatProcessorQueueName'))]"
                    },
                    "queueName": {
                        "value": "[variables('fatProcessorQueueName')]"
                    },
                    "rights": {
                        "value": [
                            "manage",
                            "listen",
                            "send"
                        ]
                    },
                    "servicebusName": {
                        "value": "[variables('azureServiceBusNamespace')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2017-05-10",
            "name": "providerPortalRedisCache",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('deploymentUrlBase'),'redis.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "redisName": {
                        "value": "[variables('redisCacheName')]"
                    },
                    "redisSkuName": {
                        "value": "[parameters('redisSkuName')]"
                    },
                    "redisCapacity": {
                        "value": "[parameters('redisCapacity')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "storageConnectionString": {
            "type": "string",
            "value": "[reference('courseDirectoryStorage').outputs.storageConnectionString.value]"
        },
        "appServicePlanName": {
            "type": "string",
            "value": "[variables('appServicePlanName')]"
        },
        "appServiceName": {
            "type": "string",
            "value": "[variables('appServiceName')]"
        },
        "cosmosDbSQLName": {
            "type": "string",
            "value": "[variables('cosmosDbSQLName')]"
        },
        "azureSearchName": {
            "type": "string",
            "value": "[variables('azureSearchName')]"
        }
    }
}